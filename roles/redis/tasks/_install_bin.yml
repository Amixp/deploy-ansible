---
- name: Check if dist has been downloaded
  command: test -f /tmp/{{ dist_filename }}
  register: dist_downloaded
  failed_when: dist_downloaded.rc not in [0, 1]
  changed_when: False

- name: Set download command
  set_fact:
    dwn_cmd: "curl -O -x {{ proxy_env.http_proxy }}"
  when: proxy_env is defined

- name: Set download command
  set_fact:
    dwn_cmd: "curl -O"
  when: proxy_env is undefined

- name: Download
  shell: "{{ dwn_cmd }} {{ dist_url }} chdir=/tmp"
  when: dist_downloaded.rc == 1

- name: Copy checksum
  copy: src={{ dist_filename }}.sha1 dest=/tmp

- name: Checksum
  shell: "sha1sum -c {{ dist_filename }}.sha1 chdir=/tmp"
  register: check_result
  failed_when: "'FAILED' in check_result.stdout"

- name: Extract
  shell: "tar -xzf /tmp/{{ dist_filename }} chdir=/tmp"

- name: Make
  shell: "make chdir=/tmp/redis-{{ dist_version }}"

- name: Remove redis
  action: file path={{ srv_home }} state=absent
  sudo: yes

- name: Install redis
  shell: "make PREFIX={{ srv_home }} install chdir=/tmp/redis-{{ dist_version }}"
  sudo: yes

- name: Remove redis src from /tmp
  shell: "rm -rf /tmp/redis-{{ dist_version }}*"
